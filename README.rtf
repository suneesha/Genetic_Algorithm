{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Cambria;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
GENETIC ALGORITHM USING TOURNAMENT SELECTION in OCTAVE\
\
Case: 
\f1\b\fs20 COMPARATIVE STUDY OF GENETIC ALGORITHM WITH VARIOUS PARAMETERS IN NEURAL CRYPTOGRAPHY        \

\fs24 \
\pard\pardeftab720\ri380\partightenfactor0

\b0 \cf0 Genetic Algorithm was modified with different parameters such as different crossover rate, mutation rate and different selection methods in order to derive the most optimal parameters for the key generation in the tree parity machine. Implemented using  C++ and Octave.\
\
Included: Code snippet of the Genetic algorithm on the weights of the tree parity machine using tournament selection.\
\
Implementation: Octave\
\
Steps: \
\pard\pardeftab720\ri-588\partightenfactor0
\cf0 1.In the octave command line prompt , go the directory containing the GA_tournament.m file\
2. Type :       GA_tournament\
\pard\pardeftab720\ri380\partightenfactor0
\cf0 This will execute the file and get the result of the weight generated through Genetic Algorithm.\
}